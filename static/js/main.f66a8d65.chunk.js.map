{"version":3,"sources":["components/ChatListItem.js","components/images/Intro.jpg","components/ChatIntro.js","components/MessageItem.js","Api.js","firebaseconfig.js","components/ChatWindow.js","components/NewChat.js","components/Login.js","App.js","index.js"],"names":["onClick","active","data","useState","time","setTime","useEffect","lastMessageDate","d","Date","seconds","hours","getHours","minutes","getMinutes","className","src","image","alt","title","lastMessage","Intro","user","date","style","justifyContent","id","author","backgroundColor","body","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","fbPopup","a","provider","auth","FacebookAuthProvider","signInWithPopup","result","addUser","u","collection","doc","set","name","avatar","merge","getContactList","userId","list","get","forEach","push","addNewChat","user2","add","messages","users","newChat","update","chats","FieldValue","arrayUnion","chatId","with","onChatList","setChatList","onSnapshot","exists","sort","b","undefined","onChatContent","setList","setUsers","sendMessage","chatData","type","now","i","uData","e","useRef","recognition","SpeechRecognition","window","webkitSpeechRecognition","emojiOpen","setEmojiOpen","text","setText","listening","setListening","Api","current","scrollHeight","offsetHeight","scrollTop","handleSendClick","color","ref","map","item","key","height","pickerStyle","width","disableSkinTonePicker","disableSearchBar","onEmojiClick","emojiObject","emoji","value","onChange","target","onKeyUp","keyCode","placeholder","onstart","onend","onresult","results","transcript","start","show","chatlist","setShow","getList","handleClose","left","onReceive","hadleFacebookLogin","alert","fontSize","App","chatList","activeChat","setActiveChat","setUser","showNewChat","setShowNewChat","handleLoginData","newUser","uid","displayName","photoURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f66a8d65.chunk.js","sourcesContent":["import './ChatListItem.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nexport default ({onClick, active, data})=>{\r\n\r\n    const [time, setTime] = useState('')\r\n\r\n    useEffect(()=>{\r\n        if(data.lastMessageDate > 0){\r\n            let d = new Date(data.lastMessageDate.seconds * 1000);\r\n            let hours = d.getHours();\r\n            let minutes = d.getMinutes();\r\n            hours = hours < 10 ? '0' + hours : hours;\r\n            minutes = minutes < 10 ? '0' + minutes : minutes;\r\n            setTime(`${hours}:${minutes}`)\r\n        }\r\n    }, [data])\r\n    return (\r\n        <div className={`chatListItem ${active?'active':''}`}\r\n        onClick={onClick}\r\n        >\r\n            <img className='chatListItem-avatar' src={data.image} alt=''/>\r\n            <div className='chatListItem-lines'>\r\n                <div className='chatListItem-line'>\r\n                    <div className='chatListItem-name'>{data.title}</div>\r\n                    <div className='chatListItem-date'>{time}</div>\r\n                </div>\r\n                <div className='chatListItem-line'>\r\n                    <div className='chatListItem-lastMsg'>\r\n                        <p>{data.lastMessage}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/Intro.5690d473.jpg\";","import './ChatIntro.css';\r\nimport Intro from './images/Intro.jpg'\r\n\r\n\r\nexport default ()=>{\r\n    return(\r\n        <div className='chatIntro'>\r\n            <img src={Intro} alt=''/>\r\n            <h1>Mantenha seu celular conectado</h1>\r\n            <h2>O Whatsapp conecta ao seu telefone para sincronizar suas mensagens. Para reduzir o uso de dados, conecte seu telefone a uma rede Wi-Fi. </h2>\r\n        </div>\r\n    )\r\n}","import './MessageItem.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nexport default ({data, user})=>{\r\n\r\n    const [time, setTime] = useState('')\r\n\r\n    useEffect(()=>{\r\n        if(data.date > 0){\r\n            let d = new Date(data.date.seconds * 1000);\r\n            let hours = d.getHours();\r\n            let minutes = d.getMinutes();\r\n            hours = hours < 10 ? '0' + hours : hours;\r\n            minutes = minutes < 10 ? '0' + minutes : minutes;\r\n            setTime(`${hours}:${minutes}`)\r\n        }\r\n    }, [data]);\r\n\r\n\r\n    return (\r\n        <div className='messageLine'\r\n            style={{justifyContent: user.id === data.author ? 'flex-end' : 'flex-start'}}\r\n        >\r\n            <div className='messageItem' style={{backgroundColor: user.id === data.author ? '#DCF8C6' : \"#FFF\"}}>\r\n                <div className='messageText'>\r\n                    {data.body}\r\n                </div>\r\n                <div className='messageDate'>\r\n                    {time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\nimport firebaseConfig from './firebaseconfig';\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default {\r\n    fbPopup: async ()=>{\r\n        const provider = new firebase.auth.FacebookAuthProvider();\r\n        let result = await firebaseApp.auth().signInWithPopup( provider );\r\n        return result;\r\n    },\r\n    addUser: async (u)=>{\r\n        await db.collection('users').doc(u.id).set({\r\n            name: u.name,\r\n            avatar: u.avatar\r\n        }, {merge: true})\r\n    },\r\n    getContactList: async (userId)=>{\r\n        let list = []\r\n        let results = await db.collection('users').get();\r\n        results.forEach(result=>{\r\n            let data = result.data();\r\n            if(result.id !== userId){\r\n                list.push({\r\n                    id: result.id,\r\n                    name: data.name,\r\n                    avatar: data.avatar\r\n                })\r\n            }\r\n        })\r\n\r\n        return list\r\n    },\r\n    addNewChat: async (user, user2) =>{\r\n        let newChat = await db.collection('chats').add({\r\n            messages: [],\r\n            users: [user.id, user2.id]\r\n        });\r\n\r\n        db.collection('users').doc(user.id).update({\r\n            chats: firebase.firestore.FieldValue.arrayUnion({\r\n                chatId: newChat.id,\r\n                title: user2.name,\r\n                image: user2.avatar,\r\n                with: user2.id\r\n            })\r\n        });\r\n\r\n        db.collection('users').doc(user2.id).update({\r\n            chats: firebase.firestore.FieldValue.arrayUnion({\r\n                chatId: newChat.id,\r\n                title: user.name,\r\n                image: user.avatar,\r\n                with: user.id\r\n            })\r\n        });\r\n    },\r\n    onChatList: (userId, setChatList)=>{\r\n        return db.collection('users').doc(userId).onSnapshot((doc)=>{\r\n            if(doc.exists){\r\n                let data = doc.data();\r\n\r\n                if(data.chats){\r\n                    let chats = [...data.chats];\r\n                    chats.sort((a, b)=>{\r\n                        if(a.lastMessageDate === undefined){\r\n                            return -1;\r\n                        }\r\n                        if(b.lastMessageDate === undefined){\r\n                            return -1;\r\n                        }\r\n\r\n                        if(a.lastMessageDate.seconds < b.lastMessageDate.seconds){\r\n                            return 1;\r\n                        }else{\r\n                            return -1;\r\n                        }\r\n                    })\r\n                    setChatList(chats)\r\n                }\r\n            }\r\n        });\r\n    },\r\n    onChatContent: (chatId, setList, setUsers)=>{\r\n        return db.collection('chats').doc(chatId).onSnapshot((doc)=>{\r\n            if(doc.exists){\r\n                let data = doc.data();\r\n                setList(data.messages);\r\n                setUsers(data.users)\r\n            }\r\n        })\r\n    },\r\n    sendMessage: async (chatData, userId, type, body, users)=>{\r\n        let now = new Date();\r\n        db.collection('chats').doc(chatData.chatId).update({\r\n            messages: firebase.firestore.FieldValue.arrayUnion({\r\n                type,\r\n                author: userId,\r\n                body,\r\n                date: now\r\n            })\r\n        })\r\n        for(let i in users){\r\n            let u = await db.collection('users').doc(users[i]).get();\r\n            let uData = u.data();\r\n            if(uData.chats){\r\n                let chats = [...uData.chats];\r\n\r\n                for(let e in chats){\r\n                    if( chats[e].chatId === chatData.chatId ){\r\n\r\n                        chats[e].lastMessage = body;\r\n                        chats[e].lastMessageDate = now;\r\n                    }\r\n                }\r\n                await db.collection('users').doc(users[i]).update({\r\n                    chats\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\n","export default {\r\n    apiKey: \"AIzaSyBh9NvYM203CNeT6dIGe4Ri6TimDM31RwU\",\r\n    authDomain: \"whatsappclone-fbb06.firebaseapp.com\",\r\n    projectId: \"whatsappclone-fbb06\",\r\n    storageBucket: \"whatsappclone-fbb06.appspot.com\",\r\n    messagingSenderId: \"149597100740\",\r\n    appId: \"1:149597100740:web:d7ee77ecdab4ae92f38791\",\r\n    measurementId: \"G-10R6Z98SKY\"\r\n  };    ","import { useState, useEffect, useRef } from 'react';\r\nimport MessageItem from './MessageItem';\r\nimport './ChatWindow.css';\r\nimport Api from '../Api';\r\n\r\nimport EmojiPicker from 'emoji-picker-react';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport MoodIcon from '@material-ui/icons/Mood';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\nexport default ({user, data})=>{\r\n\r\n    const body = useRef();\r\n\r\n    let recognition = null;\r\n    let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (SpeechRecognition !== undefined){\r\n        recognition = new SpeechRecognition();\r\n    }\r\n\r\n    const [emojiOpen, setEmojiOpen] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [listening, setListening] =  useState(false);\r\n    const [list, setList] = useState([]);\r\n    const [users, setUsers] = useState([])\r\n\r\n\r\n    useEffect(()=>{\r\n        setList([]);\r\n        let unsub = Api.onChatContent(data.chatId, setList, setUsers);\r\n        return unsub;\r\n    }, [data.chatId])\r\n\r\n    useEffect(()=>{\r\n        if(body.current.scrollHeight > body.current.offsetHeight){\r\n            body.current.scrollTop = body.current.scrollHeight - body.current.offsetHeight\r\n        }\r\n    }, [list])\r\n\r\n    const handleOpenEmoji = ()=>{\r\n        setEmojiOpen(true)\r\n    }\r\n\r\n    const handleEmojiClose = ()=>{\r\n        setEmojiOpen(false)\r\n    }\r\n\r\n    const handleEmojiClick =(e, emojiObject)=>{\r\n        setText(text + emojiObject.emoji)\r\n    }\r\n\r\n    const handleInputKeyUp = (e)=>{\r\n        if(e.keyCode == 13){\r\n            handleSendClick();\r\n        }\r\n    }\r\n\r\n    const handleSendClick = ()=>{\r\n        if(text !== ''){\r\n            Api.sendMessage(data, user.id, 'text', text, users);\r\n            setText('');\r\n            setEmojiOpen(false);\r\n        }\r\n    }\r\n    const handleMicClick = ()=>{\r\n        if(recognition !== null){\r\n            recognition.onstart = ()=>{\r\n                setListening(true);\r\n            }\r\n            recognition.onend = ()=>{\r\n                setListening(false);\r\n            }\r\n            recognition.onresult = (e)=>{\r\n                setText(e.results[0][0].transcript)\r\n            }\r\n            recognition.start()\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='chatWindow'>\r\n            <div className='chatWindow-header'>\r\n                \r\n                <div className='chatWindow-headerInfo'>\r\n                    <img className='chatWindow-avatar' src={data.image} alt=''/>\r\n                    <div className='chatWindow-name'>{data.title}</div>\r\n                </div>\r\n                <div className='chatWindow-headerButtons'>\r\n                    <div className='chatWindow-btn'>\r\n                        <SearchIcon style={{color: '#919191'}}/>\r\n                    </div>\r\n                    <div className='chatWindow-btn'>\r\n                        <MoreVertIcon style={{color: '#919191'}}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div ref={body} className='chatWindow-body'>\r\n                {list.map((item, key)=>(\r\n                    <MessageItem\r\n                    user={user}\r\n                    key={key}\r\n                    data={item}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <div className='chatWindow-emojiArea' style={{height: emojiOpen ? '200px' : '0px'}}>\r\n                <EmojiPicker \r\n                    pickerStyle={{width: 'auto'}}\r\n                    disableSkinTonePicker\r\n                    disableSearchBar\r\n                    onEmojiClick={handleEmojiClick}\r\n                />\r\n            </div>\r\n            <div className='chatWindow-footer'>\r\n                <div className='chatWindow-pre'>\r\n                    <div className='chatWindow-btn' style={{width: emojiOpen ? '40px' : '0px'}}>\r\n                        <CloseIcon style={{color: '#919191'}} onClick={handleEmojiClose}/>\r\n                    </div>\r\n                    <div className='chatWindow-btn' onClick={handleOpenEmoji}>\r\n                        <MoodIcon style={{color: emojiOpen ? '#009688' : '#919191'}}/>\r\n                    </div>\r\n                    <div className='chatWindow-btn'>\r\n                     <AttachFileIcon  style={{color: '#919191'}}/>\r\n                    </div>\r\n                </div>\r\n                <div className='chatWindow-inputArea'>\r\n                    <input \r\n                        value={text} \r\n                        onChange={(e)=>setText(e.target.value)} \r\n                        onKeyUp={handleInputKeyUp}\r\n                        type='text' className='chatWindow-input' \r\n                        placeholder='Digite uma mensagem'/>\r\n                </div>\r\n                <div className='chatWindow-pos'>\r\n                    {text ?  \r\n                        <div onClick={handleSendClick} className='chatWindow-btn'>\r\n                            <SendIcon  style={{color:'#919191'}}/>\r\n                        </div> \r\n                            :\r\n                        <div onClick={handleMicClick} className='chatWindow-btn'>\r\n                            <MicIcon  style={{color: listening ? '#126ECE' : '#919191'}}/>\r\n                        </div>\r\n                    }\r\n                   \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './NewChat.css';\r\nimport { useState, useEffect } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Api from '../Api';\r\n\r\nexport default ({user, chatlist, show, setShow})=>{\r\n    const [list, setList] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const getList = async ()=>{\r\n            if(user !== null){\r\n                let results = await Api.getContactList(user.id);\r\n                setList(results)\r\n            }\r\n        }\r\n        getList();\r\n    }, [user])\r\n\r\n    const handleClose = ()=>{\r\n        setShow(false)\r\n    }\r\n\r\n    const addNewChat = async (user2)=>{\r\n        await Api.addNewChat(user, user2);\r\n        \r\n        handleClose();\r\n    }\r\n\r\n    return(\r\n        <div className='newChat' style={{left: show ? 0 : -415}}>\r\n            <div className='newChat-head'>\r\n                <div onClick={handleClose} className='newChat-backButton'>\r\n                    <ArrowBackIcon style={{color: '#FFFFFF'}}/>\r\n                </div>\r\n                <div className='newChat-headTitle'>\r\n                    Nova Conversa\r\n                </div>\r\n            </div>\r\n            <div className='newChat-list'>\r\n                {list.map((item, key)=>(\r\n                    <div onClick={()=>addNewChat(item)} className='newChat-item' key={key}>\r\n                        <img className='newChat-itemAvatar' src={item.avatar} alt=''/>\r\n                        <div className='newChat-itemName'>{item.name}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './Login.css';\r\nimport Api from '../Api'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\n\r\nexport default ({onReceive})=>{\r\n \r\n    const hadleFacebookLogin = async ()=>{\r\n        let result = await Api.fbPopup(); \r\n        if(result){\r\n            onReceive(result.user)\r\n        }else{\r\n            alert('Erro!'); \r\n        }   \r\n    }\r\n\r\n\r\n    return (\r\n        <div className='login'>\r\n            <FacebookIcon style={{fontSize: '3em'}} className='fbIcon' onClick={hadleFacebookLogin}/>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport { useState, useEffect } from 'react';\n\nimport ChatListItem from './components/ChatListItem';\nimport ChatIntro from './components/ChatIntro';\nimport ChatWindow from './components/ChatWindow';\nimport NewChat from './components/NewChat';\nimport Login from './components/Login';\n\n\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Api from './Api';\n\n\nfunction App() {\n  \n  const [chatList, setChatList] = useState([]); \n  const [activeChat, setActiveChat] = useState({});\n  const [user, setUser] = useState(null); \n  const[showNewChat, setShowNewChat] = useState(false);\n\n  useEffect(()=>{\n    if(user !== null){\n      let unsub = Api.onChatList(user.id, setChatList);\n      return unsub;\n    }\n  }, [user])\n\n  const handleNewChat = ()=>{\n    setShowNewChat(true)\n  }\n\n  const handleLoginData = async(u)=>{\n    let newUser = {\n      id: u.uid,\n      name: u.displayName,\n      avatar: u.photoURL\n    };\n    await Api.addUser(newUser);\n    setUser(newUser);\n  }\n  if(user === null){\n    return(<Login onReceive={handleLoginData} />)\n    \n  }\n\n\n  return (\n    <div className=\"app-window\">\n      <div className='sidebar'>\n        <NewChat\n          chatlist={chatList}\n          user={user} \n          show={showNewChat}\n          setShow={setShowNewChat}\n        />\n        <header>\n          <img className='header-avatar' src={user.avatar} alt='avatar'/>\n          <div className='header-buttons'>\n            <div className='header-btn'>\n              <DonutLargeIcon style={{color: '#919191'}}/>\n            </div>\n            <div onClick={handleNewChat} className='header-btn'>\n              <ChatIcon style={{color: '#919191'}}/>\n            </div>\n            <div className='header-btn'>\n              <MoreVertIcon style={{color: '#919191'}}/>\n            </div>\n            \n          </div>\n        </header>\n\n        <div className='search'>\n          <div className='search-input'>\n            <SearchIcon fontSize='small' style={{color: '#919191'}}/>\n            <input type='search' placeholder='Pesquisar ou começar uma nova conversa'/>\n          </div>\n        </div>\n\n        <div className='chatlist'>\n          {chatList.map((item, key)=>(\n            <ChatListItem\n              key={key}\n              data={item}\n              active={activeChat.chatId === chatList[key].chatId}\n              onClick={()=>setActiveChat(chatList[key])}\n            />\n          ))}\n        </div>\n\n      </div>\n      <div className='contentarea'>\n        {activeChat.chatId !== undefined &&\n          <ChatWindow \n          user={user}\n          data = {activeChat}\n          />\n        }\n        {activeChat.chatId == undefined &&\n          <ChatIntro/>\n        }\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}